/*
 * PROPRIETARY INFORMATION.  This software is proprietary to
 * Side Effects Software Inc., and is not to be reproduced,
 * transmitted, or disclosed in any way without written permission.
 *
 * Produced by:
 *	Side Effects Software Inc.
 *	123 Front Street West, Suite 1401
 *	Toronto, Ontario
 *      Canada   M5J 2M2
 *	416-504-9876
 *
 */

#ifndef __HUSD_LockedStageRegistry_h__
#define __HUSD_LockedStageRegistry_h__

#include "HUSD_API.h"
#include "HUSD_LockedStage.h"
#include <UT/UT_Map.h>
#include <utility>

// This singleton class is used to generate safely locked, unalterable copies
// of stages generated by LOP nodes. This is primarily for LOP nodes that
// introduce references to the stages output from other LOP nodes. See the
// HUSD_LockedStage class for more information.
class HUSD_API HUSD_LockedStageRegistry
{
public:
    static HUSD_LockedStageRegistry	&getInstance();

    HUSD_LockedStagePtr		 getLockedStage(int nodeid,
					const HUSD_DataHandle &data,
					bool strip_layers,
					HUSD_StripLayerResponse response);
    void			 clearLockedStage(int nodeid);

private:
				 HUSD_LockedStageRegistry();
				~HUSD_LockedStageRegistry();

    // Locked stages are identified by an integer node id, and bool flag
    // indicating whether that node's stage was flattened with or without
    // layers from above layer breaks stripped out.
    typedef std::pair<int, bool> LockedStageId;

    UT_Map<LockedStageId, HUSD_LockedStageWeakPtr> myLockedStageMap;
};

#endif

